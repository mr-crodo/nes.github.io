// day 4

//! Это инторполяция в ES6 использовалось раньше так:
// ?  const category = 'toys';
//?   console.log('`https://mrcrodo.com/' + '/' + '5');


// const category = 'toys';

// console.log(`https://mrcrodo.com/${category}/5`);

// const user = "Ivan";

// alert(`Привет, ${user}`);

// ***************************
// Если мы число прибавляем к числовому выражению в ковычках то получается
// 55 а точнее строка как бы строки присоединяются
console.log(typeof(5 + "5"));
// Но есди мы перед тем значением что в кавычках поставим +
// тогда получаем число
console.log(5 + +"7");
плюс который ставится перед ковычками называется унарным


// в члучае же умножения мы получаем число
// сы получам число в обоих члуяаях когда число на число и когда число на члово
//  в обоих случаях получем числовой тип значения
console.log(typeof(5 * "7"));
console.log(typeof(5 * "Hello"));

Инкримент и дикримент:

let incr =  10,
    decr = 10;

такое написание называется постиксными
    incr++; // операция инкриента или увелисения значения  на 1
    decr--;  // операция декремента или уменшения хначения на 1

такое написание называется префиксными
    ++incr;
    --decr;

    console.log(incr); // ответ: 11
    console.log(decr); // ответ: 9

если в консоле ввести постиксную форму ( console.log(incr++); )
то тогда мы полусим хнасение заданное в начале тоесть 10,
так как код ситаетссч сверху вниз и с лево на право

а если в консоле ввести префиксную форму  ( console.log(++incr); )
то тогда к значению заданному в начале еще прибавится еденици а после
покажется в консоле тоесть ответ будет 11


в JS оператор присваивания имеет вид "="
если мы хотим сто либо сравнить мы должны записать данным способом
"==" - это называется не строгое равно
"===" а это строгое равно, оно использыетсяя когда все равенства проверяются

&& - Это оператор "И" возврашает правду когда оба варианта правда, допустим это правда и это правда
|| - Это оператор "ИЛИ" работает когда один из вариантов один правда или не правда
